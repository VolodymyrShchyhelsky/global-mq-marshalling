

SCOPE test_gmq PROTO = GMQ;
SCOPE test_json PROTO = JSON;

MESSAGE test_gmq : message_two = 2 = STRUCT struct_one;
MESSAGE test_json : message_three = 3 = STRUCT struct_one;

MESSAGE NONEXTENDABLE test_gmq : message_four = 4 {
	STRUCT point pt;
	VECTOR<STRUCT point3D> pts3d;
};

MESSAGE NONEXTENDABLE test_json : message_five = 5 {
	STRUCT point pt;
	VECTOR<STRUCT point3D> pts3d;
};

STRUCT NONEXTENDABLE point {
  INTEGER x;
  INTEGER y;
};

STRUCT point3D {
  INTEGER x;
  INTEGER y;
  INTEGER z;
};

STRUCT struct_one {
  INTEGER firstParam;
  VECTOR<INTEGER> secondParam;
  VECTOR<STRUCT point3D> thirdParam;
  UINTEGER forthParam;
  CHARACTER-STRING fifthParam;
  VECTOR<STRUCT NONEXTENDABLE point> sixthParam;
  REAL seventhParam;
  STRUCT NONEXTENDABLE point eighthParam;
  STRUCT point3D ninethParam;
  VECTOR<REAL> tenthParam;
};



DISCRIMINATED_UNION du_one{
	CASE one=1: { 
		REAL D1;
		REAL D2;
		REAL D3;
	}
	CASE two=2: { 
		VECTOR<REAL> Data;
	}
};

STRUCT struct_du {
	STRUCT point3D pt;
	DISCRIMINATED_UNION du_one disc_union;
};

MESSAGE test_gmq : message_du = 5 = STRUCT struct_du;


PUBLISHABLE html_data = 3 {
	STRUCT HtmlTag tag;
};

STRUCT Property{
  CHARACTER-STRING name;
  CHARACTER-STRING value;
};


STRUCT HtmlTag{
	STRUCT Property p1;
	STRUCT Property p2;
	

	INTEGER i1;
};

STRUCT HtmlSubData{
	CHARACTER-STRING name;
	CHARACTER-STRING value;

};
