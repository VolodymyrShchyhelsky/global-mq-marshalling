

SCOPE test_gmq PROTO = GMQ;
SCOPE test_json PROTO = JSON;

MESSAGE test_gmq :point3D_alias=1 = STRUCT point3D;
MESSAGE test_json :point_alias=2 = STRUCT point;


STRUCT NONEXTENDABLE point {
  INTEGER x;
  INTEGER y;
};

STRUCT point3D {
  INTEGER x;
  INTEGER y;
  INTEGER z;
};


MESSAGE test_gmq:message_one=3 {
  INTEGER firstParam;
  VECTOR<INTEGER> secondParam;
  VECTOR<STRUCT point3D> thirdParam;
  UINTEGER forthParam;
  CHARACTER-STRING fifthParam;
  VECTOR<STRUCT NONEXTENDABLE point> sixthParam;
  REAL seventhParam;
  STRUCT NONEXTENDABLE point eighthParam;
  STRUCT point3D ninethParam;
  VECTOR<REAL> tenthParam;
};

MESSAGE test_json:message_one=3 {
  INTEGER firstParam;
  VECTOR<INTEGER> secondParam;
  VECTOR<STRUCT point3D> thirdParam;
  UINTEGER forthParam;
  CHARACTER-STRING fifthParam;
  VECTOR<STRUCT NONEXTENDABLE point> sixthParam;
  REAL seventhParam;
  STRUCT NONEXTENDABLE point eighthParam;
  STRUCT point3D ninethParam;
  VECTOR<REAL> tenthParam;
};


DISCRIMINATED_UNION du_one{
	CASE one=1: { 
		REAL D1;
		REAL D2;
		REAL D3;
	}
	CASE two=2: { 
		VECTOR<REAL> Data;
	}
};

MESSAGE NONEXTENDABLE test_gmq : message_du = 5 {
	STRUCT point3D pt;
	DISCRIMINATED_UNION du_one disc_union;
};

